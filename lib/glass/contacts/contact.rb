module Glass
  CONTACT="contact"

  # A person or group that can be used as a creator or a contact.
  #
  class Contact

    class << self
      # The type of resource. This is always mirror#contact.
      #
      attr_accessor :kind
    end

    @@kind=MIRROR+"#"+CONTACT

    # The ID of the application that created this contact.
    # This is populated by the API
    attr_reader :source
    @source

    # An ID for this contact.
    # This is generated by the application and is treated as an opaque token.
    #
    attr_reader :id
    @id

    # The name to display for this contact.
    #
    attr_accessor :displayName
    @displayName

    # Set of image URLs to display for a contact.
    # Most contacts will have a single image, but a "group" contact may include up to 8 image URLs and they will be resized and cropped into a mosaic on the client.
    #
    attr_accessor :imageUrls
    @imageUrls=[]

    # The type for this contact. This is used for sorting in UIs. Allowed values are:
    #   INDIVIDUAL - Represents a single person. This is the default.
    #   GROUP - Represents more than a single person.
    #
    attr_accessor :type
    @type

    # A list of MIME types that a contact supports.
    # The contact will be shown to the user if any of its acceptTypes matches any of the types of the attachments on the item.
    # If no acceptTypes are given, the contact will be shown for all items.
    #
    attr_accessor :acceptTypes
    @acceptTypes=[]

    # Primary phone number for the contact.
    # This can be a fully-qualified number, with country calling code and area code, or a local number.
    #
    attr_accessor :phoneNumber
    @phoneNumber

    # Priority for the contact to determine ordering in a list of contacts.
    # Contacts with higher priorities will be shown before ones with lower priorities.
    #
    attr_accessor :priority
    @priority

  end
end